---
import Image from '~/components/common/Image.astro';
import Button from '~/components/ui/Button.astro';

import type { Hero as Props } from '~/types';

const {
  title = await Astro.slots.render('title'),
  subtitle = await Astro.slots.render('subtitle'),
  tagline,
  content = await Astro.slots.render('content'),
  actions = await Astro.slots.render('actions'),
  image = await Astro.props.image,
  logo = await Astro.props.logo, // Logo slot added
  id,
  bg = await Astro.slots.render('bg'),
} = Astro.props;
---

<section class={`relative not-prose m-0 p-0 ${bg === 'dark' ? 'bg-gray-100 text-white' : ''}`} {...id ? { id } : {}}>
  <!-- Full-width Image Block -->
  <div class="relative w-full h-[250px] md:h-[300px] lg:h-[375px] xl:h-[500px] overflow-hidden">
    {
      image && (
        <Image
          src={image.src}
          alt={image.alt || 'Hero Image'}
          class="absolute inset-x-0 top-0 object-cover w-full h-full"
        />
      )
    }
  </div>

  <!-- Logo and Content Section -->
  <div class="relative max-w-7xl mx-auto px-4 sm:px-6 -mt-8">
    <!-- Centered Logo -->
    <div class="flex justify-center">
      {
        logo && (
          <div
            class="bg-white dark:bg-gray-600/80 p-6 shadow-lg"
            style="width: 50vw; height: 25vw; min-width: 300px; min-height: 150px;"
          >
            <Image src={logo.src} alt={logo.alt || 'Logo'} class="h-full w-full object-contain" />
          </div>
        )
      }
    </div>

    <!-- Text Content -->
    <div class="text-center mt-8">
      {
        tagline && (
          <p
            class="text-base text-secondary dark:text-gray-400 font-bold tracking-wide uppercase mb-2"
            set:html={tagline}
          />
        )
      }
      {
        title && (
          <h1
            class="text-4xl md:text-5xl font-bold leading-tighter tracking-tighter mb-4 font-heading dark:text-gray-200"
            set:html={title}
          />
        )
      }
      {subtitle && <p class="max-w-3xl mx-auto text-xl text-muted mb-6 dark:text-slate-300" set:html={subtitle} />}
      {
        actions && (
          <div class="flex flex-wrap justify-center gap-4">
            {Array.isArray(actions) ? (
              actions.map((action) => <Button {...(action || {})} class="py-2 px-4" />)
            ) : (
              <Fragment set:html={actions} />
            )}
          </div>
        )
      }
      {content && <Fragment set:html={content} />}
    </div>
  </div>
</section>
